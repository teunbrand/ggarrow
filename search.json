[{"path":"https://teunbrand.github.io/ggarrow/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Teun van den Brand Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://teunbrand.github.io/ggarrow/articles/ornaments.html","id":"head-ornaments","dir":"Articles","previous_headings":"","what":"Head ornaments","title":"Arrow Ornaments","text":"Head ornaments ‘arrowhead’ ornaments end line.","code":""},{"path":"https://teunbrand.github.io/ggarrow/articles/ornaments.html","id":"wings","dir":"Articles","previous_headings":"Head ornaments","what":"Wings","title":"Arrow Ornaments","text":"‘wings’ ornament places two symmetric triangles either side line, can called using arrow_head_wings() function. offset parameter determines angle triangle departs line end. inset parameter determines angle inside corner line. ensure inset + offset equals 90, can mimic grid::arrow(..., type = \"closed\") (2nd example). length_head arguments determines distance red line arrow tip blue line, triangle re-joins line.  can get impression kinds shapes can make wings arrowhead.","code":""},{"path":"https://teunbrand.github.io/ggarrow/articles/ornaments.html","id":"line","dir":"Articles","previous_headings":"Head ornaments","what":"Line","title":"Arrow Ornaments","text":"‘line’ ornament draws two line segments departing line end, can set using arrow_head_line() argument. linewidth aesthetic determines thickness departing line, line width path ornament. size arrow determined length_head argument, now encompasses length protruding lines instead reconnection point back path.","code":""},{"path":"https://teunbrand.github.io/ggarrow/articles/ornaments.html","id":"minimal","dir":"Articles","previous_headings":"Head ornaments","what":"Minimal","title":"Arrow Ornaments","text":"‘minimal’ ornament isn’t truly ornament, determines arrow shaft gets notched. Therefore, independent length_head might set, dependent angle argument linewidth aesthetic.","code":""},{"path":"https://teunbrand.github.io/ggarrow/articles/ornaments.html","id":"fins-ornaments","dir":"Articles","previous_headings":"","what":"Fins ornaments","title":"Arrow Ornaments","text":"haven’t bothered writing vignette ones yet.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://teunbrand.github.io/ggarrow/articles/ornaments.html","id":"extending-ornaments","dir":"Articles","previous_headings":"","what":"Extending ornaments","title":"Arrow Ornaments","text":"principle, extending ornaments straightforward able construct polygon xy-coordinate matrix x first column y second column. can inspect coordinates new ornament. ggarrow’s convention line joins ornament (0,0) coordinate. Also, tip ornament expected (1,0) coordinate.  can now use ornament arrow_head, arrow_fins arrow_mid arguments.","code":"my_ornament <- function(n = 5) {   t <- seq(0, 2 * pi, length.out = n * 2 + 1)[-(n * 2 + 1)]   l <- rep(c(1, 0.4), length.out = length(t))      cbind(     x = cos(t) * l,     y = sin(t) * l   ) } orn <- my_ornament(5)  # Plot ornament par(pty = \"s\") plot(orn, type = 'n', xlim = c(-1, 1), ylim = c(-1, 1)) polygon(orn[, \"x\"], orn[, \"y\"])  # Incoming line lines(debug_notching(orn, 0.2), col = 2) # Length measurement lines(x = c(0, 1), y = c(0, 0), col = 4) text(x = 0.5, y = 0.1, labels = \"Length\", col = 4) text(x = -0.5, y = 0, labels = \"Incoming line\", col = 2) ggplot(data = data.frame(x = c(0, 1)), aes(x = x)) +   geom_arrow(aes(y = c(1, 3)), arrow_head = orn) +   geom_arrow(aes(y = c(2, 2)), arrow_fins = orn) +   geom_arrow(aes(y = c(3, 1)), arrow_mid  = orn, mid_place = c(0.33, 0.66))"},{"path":"https://teunbrand.github.io/ggarrow/articles/params.html","id":"aesthetics","dir":"Articles","previous_headings":"","what":"Aesthetics","title":"Arrow parameters","text":"3 aesthetics depart typical geom_path() behaviour. first one linewidth aesthetic, can vary within path.  means theory display kernel density estimate using arrow, remapping computed density aesthetic linewidth.  two stroke_colour stroke_width aesthetics. can used outline arrow.","code":"p + geom_arrow(linewidth = c(0, 3)) ggplot(faithful, aes(waiting)) +   geom_arrow(     stat = \"density\",     aes(y = after_stat(0),         linewidth = after_scale(ndensity * 20))   ) p + geom_arrow(stroke_colour = \"black\", stroke_width = 1,                 colour = \"white\", linewidth = 5)"},{"path":"https://teunbrand.github.io/ggarrow/articles/params.html","id":"heads-fins-and-middle-arrows","dir":"Articles","previous_headings":"","what":"Heads, fins and middle arrows","title":"Arrow parameters","text":"dealt thoroughly another vignette. briefly recap, arrow comes three parts: head, shaft fins. parts valid places place ornaments.","code":""},{"path":"https://teunbrand.github.io/ggarrow/articles/params.html","id":"using-arrow-parts","dir":"Articles","previous_headings":"Heads, fins and middle arrows","what":"Using arrow parts","title":"Arrow parameters","text":"three different parts arrow can populated arrow_head, arrow_fins arrow_mid arguments. Whereas arrow_head arrow_fins pointed towards respective path ends, arrow_mid follows forward orientation.","code":"p + geom_arrow(   arrow_head = arrow_head_wings(),   arrow_mid  = arrow_head_wings(),   arrow_fins = arrow_head_wings() )"},{"path":"https://teunbrand.github.io/ggarrow/articles/params.html","id":"setting-sizes","dir":"Articles","previous_headings":"Heads, fins and middle arrows","what":"Setting sizes","title":"Arrow parameters","text":"arrow sizes can controlled length_head, length_fins length_mid arguments. can use plain <numeric> arrow size relative linewidth aesthetic. Alternatively, set length absolute manner providing <grid::unit> object.","code":"p + geom_arrow(   arrow_head = arrow_head_wings(),   arrow_mid  = arrow_head_wings(),   arrow_fins = arrow_head_wings(),   length_head = 10,   length_fins = 4,   length_mid  = unit(10, 'mm') )"},{"path":"https://teunbrand.github.io/ggarrow/articles/params.html","id":"middle-arrows","dir":"Articles","previous_headings":"Heads, fins and middle arrows","what":"Middle arrows","title":"Arrow parameters","text":"Middle arrows needn’t middle. can control placed using mid_place argument. accepts input [0-1], represents distance along path arrows drawn.  can swap direction middle arrows providing negative numbers mid_place argument.  One alternative manually specifying positions, provide distance subsequent arrows. can giving <grid::unit> instead <numeric>. , change direction middle arrows, can set negative unit.","code":"p + geom_arrow(   arrow_head = NULL,   arrow_mid  = arrow_head_wings(),   mid_place  = c(0.33, 0.66)  ) p + geom_arrow(   arrow_head = NULL,   arrow_mid  = arrow_head_wings(),   mid_place  = c(0.16, -0.33, 0.66, -0.82)  ) p + geom_arrow(   arrow_head = NULL,   arrow_mid  = arrow_head_wings(),   mid_place  = unit(-1, \"cm\") )"},{"path":"https://teunbrand.github.io/ggarrow/articles/params.html","id":"resection","dir":"Articles","previous_headings":"","what":"Resection","title":"Arrow parameters","text":"Sometimes, wouldn’t want arrows exactly touch object ’re pointing . prevent , can ‘resect’ arrow make bit shorter near ends. can provide resect argument millimetres cut path heads fins arrow.  can also control independently head fins arrow much resection done resect_head resect_fins arguments.  geom automatically geom_arrow_chain(). Normally, default resect value 1 millimeter, turn set size appropriate start end points ’ve drawn, can see doesn’t overlap points, barely touches .","code":"p + geom_arrow(resect = 5) p + geom_arrow(resect_head = 10, resect_fins = 3) p + geom_arrow_chain(size = 3, resect = 0)"},{"path":"https://teunbrand.github.io/ggarrow/articles/params.html","id":"other-parameters","dir":"Articles","previous_headings":"","what":"Other parameters","title":"Arrow parameters","text":"Sometimes, ’ve already dodged object pointed bit. Now may find arrow short. can use justify = 1 arrow start path ends.  times, might find resected arrow much. space left placing arrow, omitted default. change , show arrows despite short may , can use force_arrow argument. guarantee placed nice position though.","code":"p + geom_arrow(justify = 1, linewidth = 2) p + geom_arrow(resect = 100, force_arrow = TRUE)"},{"path":"https://teunbrand.github.io/ggarrow/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Teun van den Brand. Author, maintainer.","code":""},{"path":"https://teunbrand.github.io/ggarrow/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"van den Brand T (2023). ggarrow: Arrows 'ggplot2'. R package version 0.0.0.9000, https://teunbrand.github.io/ggarrow/.","code":"@Manual{,   title = {ggarrow: Arrows for 'ggplot2'},   author = {Teun {van den Brand}},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://teunbrand.github.io/ggarrow/}, }"},{"path":"https://teunbrand.github.io/ggarrow/index.html","id":"ggarrow-","dir":"","previous_headings":"","what":"Arrows for ggplot2","title":"Arrows for ggplot2","text":"goal ggarrow draw arrows {ggplot2}. {ggplot2} extension package focusses specialised geometry layers expand toolkit arrows. ’re reading , ’ll take opportunity inform package probably works, polished.","code":""},{"path":"https://teunbrand.github.io/ggarrow/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Arrows for ggplot2","text":"can install development version ggarrow GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"teunbrand/ggarrow\")"},{"path":"https://teunbrand.github.io/ggarrow/index.html","id":"arrows","dir":"","previous_headings":"","what":"Arrows","title":"Arrows for ggplot2","text":"’re made pointing things. workhorse functionality geom_arrow() function , unsurprisingly, draws arrows. Arrows, contrast vanilla lines, can variable widths.  Besides varying linewidths, also option place arrows along path. draw arbitrarily many , doubt look pretty.  can also tweak arrows look like. example bit verbose, gives impression available options combining different styles arrow heads termed ‘arrow fins’.  geoms mimic bread--butter ggplot2 layers, geom_arrow_segment() geom_arrow_curve(), add arrow functionality top geom_segment() geom_curve() layers. Aside , also geom_arrow_chain(), equivalent vanilla ggplot2. adds arrows points, dodges endpoints bit don’t seem touch. example , can see can dodge points different sizes.","code":"library(ggarrow) #> Loading required package: ggplot2 #> Warning: package 'ggplot2' was built under R version 4.3.2  p <- ggplot(whirlpool(5), aes(x, y, colour = group)) +   coord_equal() +   guides(colour = \"none\") p + geom_arrow(aes(linewidth = I(arc))) # Identity scale for linewidth p + geom_arrow(arrow_mid = arrow_head_wings(), mid_place = c(0.25, 0.5, 0.75)) p + geom_arrow(aes(arrow_head = group, arrow_fins = group), linewidth = 2) +   scale_arrow_head_discrete(values = list(     \"head_wings\",     arrow_head_wings(offset = 20, inset = 70),     arrow_head_line(lineend = \"parallel\"),     arrow_head_line(45, lineend = \"round\"),     \"head_minimal\"   ), guide = \"none\") +   scale_arrow_fins_discrete(values = list(     \"fins_feather\",     arrow_fins_feather(indent = 0, outdent = 0, height = 1),     \"fins_line\",     arrow_fins_line(90),     \"fins_minimal\"   ), guide = \"none\") t <- seq(0, 2 * pi, length.out = 11) l <- rep(c(1, 0.4), length.out = 11)  df <- data.frame(   x = cos(t) * l,   y = sin(t) * l,   size = l )  ggplot(df, aes(x, y, size = size)) +   geom_point(colour = 2) +   geom_arrow_chain() +   coord_equal()"},{"path":"https://teunbrand.github.io/ggarrow/index.html","id":"dependency-statement","dir":"","previous_headings":"","what":"Dependency statement","title":"Arrows for ggplot2","text":"{ggarrow} package largely takes dependencies {ggplot2} keep lightweight side. However, package wouldn’t work without {polyclip} dependency, one outside {ggplot2}’s imports.","code":""},{"path":"https://teunbrand.github.io/ggarrow/index.html","id":"related-work","dir":"","previous_headings":"","what":"Related work","title":"Arrows for ggplot2","text":"course, {grid} package, {ggplot2} build upon, offers options arrows. {arrowheadr} package provides great extensions arrowheads. {vwlines} package handles variable widths lines much graciously package. {gggenes} {gggenomes} packages use arrows domain-specific context. vector field visualisation, {ggquiver} package. {ggarchery} package also provides extended options geom_segment() parametrisation lines.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/annotate_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrow annotation layer — annotate_arrow","title":"Arrow annotation layer — annotate_arrow","text":"function mirrors annotate() following changes. First, geom argument pre-populated \"arrow\". Second, several parameters ggarrow special-cased, warning needs issued length 1.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/annotate_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrow annotation layer — annotate_arrow","text":"","code":"annotate_arrow(   geom = \"arrow\",   x = NULL,   y = NULL,   xmin = NULL,   xmax = NULL,   ymin = NULL,   ymax = NULL,   xend = NULL,   yend = NULL,   ...,   na.rm = FALSE )"},{"path":"https://teunbrand.github.io/ggarrow/reference/annotate_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrow annotation layer — annotate_arrow","text":"geom name geom use annotation x, y, xmin, ymin, xmax, ymax, xend, yend Positioning aesthetics. least one must specified. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/annotate_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrow annotation layer — annotate_arrow","text":"<Layer> ggproto object can added plot.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggarrow/reference/annotate_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrow annotation layer — annotate_arrow","text":"","code":"# Annotate an arrow ggplot() +   annotate_arrow(     x = c(0, 1), y = c(0, 1),     arrow_head = arrow_head_line(),     arrow_fins = arrow_fins_line(),     length_head = unit(5, \"mm\"),     length_fins = unit(5, \"mm\")   )   # Still works with other geoms as well ggplot(mtcars, aes(x = wt, y = mpg)) + geom_point() +   annotate_arrow(\"text\", x = 4, y = 25, label = \"Some text\")"},{"path":"https://teunbrand.github.io/ggarrow/reference/arrow_ornaments.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrow ornament functions — arrow_ornaments","title":"Arrow ornament functions — arrow_ornaments","text":"two types arrow ornament functions: functions arrow heads, functions arrow fins. heads fins can used interchangeably, name makes clearer suitable.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/arrow_ornaments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrow ornament functions — arrow_ornaments","text":"","code":"arrow_head_wings(offset = 20, inset = 30)  arrow_fins_feather(indent = 0.3, outdent = indent, height = 0.5)  arrow_head_line(angle = 30, lineend = \"butt\")  arrow_fins_line(angle = 30, lineend = \"butt\")  arrow_cup(lineend = \"round\", angle = NULL)  arrow_head_minimal(angle = 45)  arrow_fins_minimal(angle = 45)"},{"path":"https://teunbrand.github.io/ggarrow/reference/arrow_ornaments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrow ornament functions — arrow_ornaments","text":"offset, angle numeric(1) giving angle degrees angle line tip. inset numeric(1) giving angle degrees angle inside tip arrowhead. indent, outdent numeric(1) giving fraction feather feather length offset notch end respectively. height numeric(1) ratio length feathers height feathers. lineend character(1), one \"butt\", \"square\", \"round\" \"parallel\". arrow_cup(), \"butt\" \"round\" allowed.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/arrow_ornaments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrow ornament functions — arrow_ornaments","text":"<matrix[n, 2]> x y columns describing polygon. notch_angle attribute used fusing fins/head shaft arrow. can given arrow plotting function.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/arrow_ornaments.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Arrow ornament functions — arrow_ornaments","text":"convention functions arrow shaft fused ornament (0,0) point ornaments ends (1,0) point.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/arrow_ornaments.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Arrow ornament functions — arrow_ornaments","text":"arrow_head_wings(): Places two triangles either side line. Let ABC triangle, end line, B line C arrow wingtip. offset angle corner inset angle corner C. arrow_fins_feather(): Places trapezoids either side line. Let ABCD quadrilateral shape, end line, B line, CD parallel AB, offset line. , indent distance along line D outdent distance along line B C. arrow_head_line(): line arrow head. arrow_fins_line(): line arrow fin. arrow_cup(): curved line fixed distance away point resected, resembling 'cup' shape. arrow_head_minimal(): 'fake' arrow head practice draw anything, sets notch_angle attribute arrow shaft whittled triangular point. arrow_fins_minimal(): 'fake' arrow head practise draw anything, sets notch_angle attribute triangle taken arrow shaft.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/arrow_ornaments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrow ornament functions — arrow_ornaments","text":"","code":"# Plotting winged head plot(c(-0.5, 1), c(-0.6, 0.6), type = \"n\") polygon(arrow_head_wings(), col = \"gray\")   # Plotting feather fins plot(c(0, 1), c(-0.25, 0.25), type = \"n\") polygon(arrow_fins_feather(), col = \"gray\")"},{"path":"https://teunbrand.github.io/ggarrow/reference/continuous_arrow_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Continuous arrow scales — continuous_arrow_scales","title":"Continuous arrow scales — continuous_arrow_scales","text":"scales can map continuous input argument arrow generator. arrow head, arrow fins middle arrows separate scales default use different generators.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/continuous_arrow_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Continuous arrow scales — continuous_arrow_scales","text":"","code":"scale_arrow_head_continuous(   name = waiver(),   breaks = waiver(),   labels = waiver(),   limits = NULL,   generator = arrow_head_wings,   map_arg = \"offset\",   other_args = list(),   range = c(10, 80),   trans = \"identity\",   guide = \"legend\" )  scale_arrow_fins_continuous(   name = waiver(),   breaks = waiver(),   labels = waiver(),   limits = NULL,   generator = arrow_fins_feather,   map_arg = \"indent\",   other_args = list(),   range = c(0, 1),   trans = \"identity\",   guide = \"legend\" )  scale_arrow_mid_continuous(   name = waiver(),   breaks = waiver(),   labels = waiver(),   limits = NULL,   generator = arrow_head_wings,   map_arg = \"offset\",   other_args = list(),   range = c(10, 80),   trans = \"identity\",   guide = \"legend\" )"},{"path":"https://teunbrand.github.io/ggarrow/reference/continuous_arrow_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Continuous arrow scales — continuous_arrow_scales","text":"name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. breaks One : NULL breaks waiver() default breaks computed transformation object numeric vector positions function takes limits input returns breaks output (e.g., function returned scales::extended_breaks()). Also accepts rlang lambda function notation. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale range numeric vector length two providing limits scale. Use NA refer existing minimum maximum function accepts existing (automatic) limits returns new limits. Also accepts rlang lambda function notation. Note setting limits positional scales remove data outside limits. purpose zoom, use limit argument coordinate system (see coord_cartesian()). generator <function> can create arrow ornament, ornamantation functions. map_arg argument generator function map input . other_args Additional, fixed, arguments pass generator. range range generator's map_arg may take trans continuous scales, name transformation object object . Built-transformations include \"asn\", \"atanh\", \"boxcox\", \"date\", \"exp\", \"hms\", \"identity\", \"log\", \"log10\", \"log1p\", \"log2\", \"logit\", \"modulus\", \"probability\", \"probit\", \"pseudo_log\", \"reciprocal\", \"reverse\", \"sqrt\" \"time\". transformation object bundles together transform, inverse, methods generating breaks labels. Transformation objects defined scales package, called <name>_trans (e.g., scales::boxcox_trans()). can create transformation scales::trans_new(). guide function used create guide name. See guides() information.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/continuous_arrow_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Continuous arrow scales — continuous_arrow_scales","text":"<Scale> can added plot.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/continuous_arrow_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Continuous arrow scales — continuous_arrow_scales","text":"","code":"base <- ggplot(whirlpool(5), aes(x, y, colour = group)) +   coord_fixed()  p <- base +   geom_arrow(     aes(arrow_head = as.integer(group)),     length_head = 10   )  # A typical scale p + scale_arrow_head_continuous()   # Change other arguments passed to the generator p + scale_arrow_head_continuous(other_args = list(inset = 90))   # Using another argument of the generator p + scale_arrow_head_continuous(name = \"inset\",  map_arg = \"inset\")   # Using a different generator p + scale_arrow_head_continuous(   generator = arrow_head_line,   map_arg = \"angle\",   range = c(20, 80) )   # The same goes for other arrow aesthetics, but the `generator()` might differ. base +   geom_arrow(     aes(arrow_fins = as.integer(group), arrow_mid = as.integer(group)),     length_fins = 10, arrow_head = NULL   ) +   scale_arrow_fins_continuous(map_arg = \"height\", range = c(0.1, 1)) +   scale_arrow_mid_continuous(map_arg = \"inset\")"},{"path":"https://teunbrand.github.io/ggarrow/reference/debug_notching.html","id":null,"dir":"Reference","previous_headings":"","what":"Debug tool for shaft notching — debug_notching","title":"Debug tool for shaft notching — debug_notching","text":"low-level tool debug notching arrow ornaments onto arrow shafts.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/debug_notching.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Debug tool for shaft notching — debug_notching","text":"","code":"debug_notching(ornament, width = 0.2)"},{"path":"https://teunbrand.github.io/ggarrow/reference/debug_notching.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Debug tool for shaft notching — debug_notching","text":"ornament arrow ornament. width numeric(1) value line's width.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/debug_notching.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Debug tool for shaft notching — debug_notching","text":"list x y elements.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/debug_notching.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Debug tool for shaft notching — debug_notching","text":"","code":"NULL #> NULL"},{"path":"https://teunbrand.github.io/ggarrow/reference/discrete_arrow_scales.html","id":null,"dir":"Reference","previous_headings":"","what":"Discrete arrow scales — discrete_arrow_scales","title":"Discrete arrow scales — discrete_arrow_scales","text":"scales can map discrete input various sorts arrow shapes. arrow head, arrow fins middle arrows separate scales.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/discrete_arrow_scales.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Discrete arrow scales — discrete_arrow_scales","text":"","code":"scale_arrow_head_discrete(values = NULL, aesthetics = \"arrow_head\", ...)  scale_arrow_fins_discrete(values = NULL, aesthetics = \"arrow_fins\", ...)  scale_arrow_mid_discrete(values = NULL, aesthetics = \"arrow_mid\", ...)"},{"path":"https://teunbrand.github.io/ggarrow/reference/discrete_arrow_scales.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Discrete arrow scales — discrete_arrow_scales","text":"values One following: <character> vector arrow function names, without arrow_-prefix, \"head_wings\" \"fins_line\". unnested <list>, possibly mixed <list>, containing following elements: single <character> described . <function> called without arguments produces 2-column <matrix> can used arrow. 2-column <matrix> giving polygon use arrow. NULL, defaults built-palette maximum 3 arrows. aesthetics names aesthetics scale works ... Arguments passed ggplot2::discrete_scale scale_name name scale used error messages associated scale. palette palette function called single integer argument (number levels scale) returns values take (e.g., scales::hue_pal()). name name scale. Used axis legend title. waiver(), default, name scale taken first mapping used aesthetic. NULL, legend title omitted. breaks One : NULL breaks waiver() default breaks (scale limits) character vector breaks function takes limits input returns breaks output. Also accepts rlang lambda function notation. labels One : NULL labels waiver() default labels computed transformation object character vector giving labels (must length breaks) expression vector (must length breaks). See ?plotmath details. function takes breaks input returns labels output. Also accepts rlang lambda function notation. limits One : NULL use default scale values character vector defines possible values scale order function accepts existing (automatic) values returns new ones. Also accepts rlang lambda function notation. expand position scales, vector range expansion constants used add padding around data ensure placed distance away axes. Use convenience function expansion() generate values expand argument. defaults expand scale 5% side continuous variables, 0.6 units side discrete variables. na.translate Unlike continuous scales, discrete scales can easily show missing values, default. want remove missing values discrete scale, specify na.translate = FALSE. na.value na.translate = TRUE, aesthetic value missing values displayed ? apply position scales NA always placed far right. drop unused factor levels omitted scale? default, TRUE, uses levels appear data; FALSE uses levels factor. guide function used create guide name. See guides() information. position position scales, position axis. left right y axes, top bottom x axes. super super class use constructed scale","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/discrete_arrow_scales.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Discrete arrow scales — discrete_arrow_scales","text":"<Scale> can added plot.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/discrete_arrow_scales.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Discrete arrow scales — discrete_arrow_scales","text":"","code":"# A standard arrow plot p <- ggplot(whirlpool(5), aes(x, y, colour = group)) +   geom_arrow(length_head = 10, length_fins = 10, arrow_head = NULL)  # A character vector naming arrow shapes as arrow head scale p + aes(arrow_head = group) +   scale_arrow_head_discrete(values = c(       \"head_wings\", \"head_line\", \"head_minimal\", \"fins_line\", \"fins_feather\"   ))   # A mixed list with arrows as arrow fins scale p + aes(arrow_fins = group) +   scale_arrow_fins_discrete(values = list(     \"head_wings\",              # Using a character     arrow_head_wings(20, 100), # Using an arrow function     NULL,                      # No arrow     matrix(c(1, 0, 0, 0, 0.5, -0.5), ncol = 2), # A matrix     \"fins_feather\"   ))"},{"path":"https://teunbrand.github.io/ggarrow/reference/draw_key_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend key glyph for arrows — draw_key_arrow","title":"Legend key glyph for arrows — draw_key_arrow","text":"Like legend key glyphs, key can used display arrows legend.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/draw_key_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend key glyph for arrows — draw_key_arrow","text":"","code":"draw_key_arrow(data, params, size)"},{"path":"https://teunbrand.github.io/ggarrow/reference/draw_key_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend key glyph for arrows — draw_key_arrow","text":"data single row data frame containing scaled aesthetics display key params list additional parameters supplied geom. size Width height key mm.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/draw_key_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Legend key glyph for arrows — draw_key_arrow","text":"<arrow_path> grob","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/draw_key_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Legend key glyph for arrows — draw_key_arrow","text":"","code":"ggplot(mpg, aes(displ, colour = factor(cyl))) +   geom_density(key_glyph = draw_key_arrow)"},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrows — geom_arrow","title":"Arrows — geom_arrow","text":"arrow geom can used draw lines adorned arrow heads fins. useful annotation layer point away things plot. arrow typically consists three parts: arrowhead, shaft fins. geom places arrow heads end line fins beginning line.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrows — geom_arrow","text":"","code":"geom_arrow(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow_head = arrow_head_wings(),   arrow_fins = NULL,   arrow_mid = NULL,   length_head = 4,   length_fins = 4,   length_mid = 4,   justify = 0,   force_arrow = FALSE,   mid_place = 0.5,   resect = 0,   resect_head = NULL,   resect_fins = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrows — geom_arrow","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. arrow_head, arrow_fins, arrow_mid function call one arrow ornament functions can determine shape arrow head, fins middle (interior) arrows. length_head, length_fins, length_mid Determines length arrow ornaments. Can one following: numeric(1) (default) set ornament size relative linewidth shaft. <unit> control size absolute manner. Behaviour relative units \"npc\" \"null\" undefined. justify numeric(1) [0-1] control arrows drawn relative path's endpoints. value 0 sets arrow's tips path's end, whereas value 1 sets arrow's base path's end. force_arrow logical(1) , TRUE arrow drawn even length arrow shorter arrow heads fins. FALSE, drop arrows. mid_place Sets location middle (interior) arrows, applicable. Can one following: numeric vector values [0-1] set middle arrows relative positions along arc-length path. <unit> fill path arrows provided unit distance one arrow next. resect, resect_head, resect_fins numeric(1) denoting millimetres <unit> shorten arrow. resect_head shortens arrow arrow head side, whereas resect_fins shortens arrow fins side. inherit resect. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrows — geom_arrow","text":"<Layer> ggproto object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Arrows — geom_arrow","text":"geom_arrow() understands following aesthetics (required aesthetics bold): x y alpha arrow_fins arrow_head arrow_mid colour group linewidth stroke_colour stroke_width Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrows — geom_arrow","text":"","code":"# Setting up a plot p <- ggplot(whirlpool(), aes(x, y, colour = group)) +   coord_equal()  # A standard arrow p + geom_arrow()   # Arrows can have varying linewidths p + geom_arrow(aes(linewidth = arc))   # You can use `length_head` to decouple arrow-head size from linewidth p + geom_arrow(aes(linewidth = arc), length_head = unit(10, \"mm\"))   # The arrow head shape can be controlled with the `arrow_head` argument p + geom_arrow(arrow_head = arrow_head_line(), length_head = unit(10, \"mm\"))   # This works similarly for the arrow fins p + geom_arrow(arrow_fins = arrow_fins_feather(), length_fins = unit(7, \"mm\"))"},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_chain.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrow chains — geom_arrow_chain","title":"Arrow chains — geom_arrow_chain","text":"arrow chains connects set coordinates sequence arrows. geom_arrow_chain() function can useful connect observations directed manner.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_chain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrow chains — geom_arrow_chain","text":"","code":"geom_arrow_chain(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow_head = arrow_head_wings(),   arrow_fins = NULL,   arrow_mid = NULL,   length_head = 4,   length_fins = 4,   length_mid = 4,   justify = 0,   force_arrow = FALSE,   mid_place = 0.5,   resect = 1,   resect_head = NULL,   resect_fins = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_chain.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrow chains — geom_arrow_chain","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. arrow_head, arrow_fins, arrow_mid function call one arrow ornament functions can determine shape arrow head, fins middle (interior) arrows. length_head, length_fins, length_mid Determines length arrow ornaments. Can one following: numeric(1) (default) set ornament size relative linewidth shaft. <unit> control size absolute manner. Behaviour relative units \"npc\" \"null\" undefined. justify numeric(1) [0-1] control arrows drawn relative path's endpoints. value 0 sets arrow's tips path's end, whereas value 1 sets arrow's base path's end. force_arrow logical(1) , TRUE arrow drawn even length arrow shorter arrow heads fins. FALSE, drop arrows. mid_place Sets location middle (interior) arrows, applicable. Can one following: numeric vector values [0-1] set middle arrows relative positions along arc-length path. <unit> fill path arrows provided unit distance one arrow next. resect, resect_head, resect_fins numeric(1) denoting millimetres <unit> shorten arrow. resect_head shortens arrow arrow head side, whereas resect_fins shortens arrow fins side. inherit resect. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_chain.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrow chains — geom_arrow_chain","text":"<Layer> ggproto object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_chain.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Arrow chains — geom_arrow_chain","text":"geom_arrow_segment() understands following aesthetics (required aesthetics bold): x y xend yend alpha arrow_fins arrow_head arrow_mid colour group linewidth linewidth_fins linewidth_head stroke_colour stroke_width linewidth_fins linewidth_head inherit linewidth.  can used seperately control start- end-width. Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_chain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrow chains — geom_arrow_chain","text":"","code":"# Setup dummy data t <- seq(0, 2 * pi, length.out = 11) l <- rep(c(1, 0.4), length.out = 11)  df <- data.frame(   x = cos(t) * l,   y = sin(t) * l,   size = l + 0.4 )  p <- ggplot(df, aes(x, y, size = size)) +   geom_point(colour = 2) +   coord_equal()  # An arrow chains adapts to the `size` aesthetic to go nicely with points p + geom_arrow_chain()   # Without arrowhead, it is similar to a `type = 'b'` base R plot p + geom_arrow_chain(arrow_head = NULL)   # To widen the gap, one can increase the `resect` parameter p + geom_arrow_chain(resect = 5)   # To ignore the points, set `resect` and `size` to 0 p + geom_arrow_chain(size = 0, resect = 0)   # Linewidths will be interpolated across arrows p + geom_arrow_chain(aes(linewidth = seq_along(x)))   # Alternatively, we can set them seperately for starts and ends p + geom_arrow_chain(linewidth_fins = 0, linewidth_head = 3)"},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Curves with arrows — geom_arrow_curve","title":"Curves with arrows — geom_arrow_curve","text":"arrow geom can used draw curves one point oneanother arrow heads fins.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Curves with arrows — geom_arrow_curve","text":"","code":"geom_arrow_curve(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   curvature = 0.5,   angle = 90,   ncp = 5,   arrow_head = arrow_head_wings(),   arrow_fins = NULL,   arrow_mid = NULL,   length_head = 4,   length_fins = 4,   length_mid = 4,   justify = 0,   force_arrow = FALSE,   mid_place = 0.5,   resect = 0,   resect_head = NULL,   resect_fins = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Curves with arrows — geom_arrow_curve","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. curvature numeric value giving amount curvature.     Negative values produce left-hand curves, positive values     produce right-hand curves, zero produces straight line. angle numeric value 0 180,     giving amount skew control     points curve.  Values less 90 skew curve towards     start point values greater 90 skew curve     towards end point. ncp number control points used draw curve.     control points creates smoother curve. arrow_head, arrow_fins, arrow_mid function call one arrow ornament functions can determine shape arrow head, fins middle (interior) arrows. length_head, length_fins, length_mid Determines length arrow ornaments. Can one following: numeric(1) (default) set ornament size relative linewidth shaft. <unit> control size absolute manner. Behaviour relative units \"npc\" \"null\" undefined. justify numeric(1) [0-1] control arrows drawn relative path's endpoints. value 0 sets arrow's tips path's end, whereas value 1 sets arrow's base path's end. force_arrow logical(1) , TRUE arrow drawn even length arrow shorter arrow heads fins. FALSE, drop arrows. mid_place Sets location middle (interior) arrows, applicable. Can one following: numeric vector values [0-1] set middle arrows relative positions along arc-length path. <unit> fill path arrows provided unit distance one arrow next. resect, resect_head, resect_fins numeric(1) denoting millimetres <unit> shorten arrow. resect_head shortens arrow arrow head side, whereas resect_fins shortens arrow fins side. inherit resect. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Curves with arrows — geom_arrow_curve","text":"<Layer> ggproto object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_curve.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Curves with arrows — geom_arrow_curve","text":"geom_arrow() understands following aesthetics (required aesthetics bold): x y alpha arrow_fins arrow_head arrow_mid colour group linewidth stroke_colour stroke_width Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Curves with arrows — geom_arrow_curve","text":"","code":"curve_data <- data.frame(   x1 = c(2.62, 1.835),   x2 = c(3.57, 5.250),   y1 = c(21.0, 33.9),   y2 = c(15.0, 10.4),   group = c(\"A\", \"B\") )  ggplot(mtcars, aes(wt, mpg)) +   geom_point() +   geom_arrow_curve(     aes(x = x1, y = y1, xend = x2, yend = y2,         colour = group, arrow_head = group),     data = curve_data,     curvature = -0.2, length_head = 10   )"},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_segment.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrow segments — geom_arrow_segment","title":"Arrow segments — geom_arrow_segment","text":"geom_arrow_segment() draws straight arrow points (x, y) (xend, yend). contrast geom_segment(), xend yend aesthetics default x y respectively, one xend yend required.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_segment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrow segments — geom_arrow_segment","text":"","code":"geom_arrow_segment(   mapping = NULL,   data = NULL,   stat = \"identity\",   position = \"identity\",   ...,   arrow_head = arrow_head_wings(),   arrow_fins = NULL,   arrow_mid = NULL,   length_head = 4,   length_fins = 4,   length_mid = 4,   justify = 0,   force_arrow = FALSE,   mid_place = 0.5,   resect = 0,   resect_head = NULL,   resect_fins = NULL,   lineend = \"butt\",   linejoin = \"round\",   linemitre = 10,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )"},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_segment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrow segments — geom_arrow_segment","text":"mapping Set aesthetic mappings created aes(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame, used layer data. function can created formula (e.g. ~ head(.x, 10)). stat statistical transformation use data layer, either ggproto Geom subclass string naming stat stripped stat_ prefix (e.g. \"count\" rather \"stat_count\") position Position adjustment, either string naming adjustment (e.g. \"jitter\" use position_jitter), result call position adjustment function. Use latter need change settings adjustment. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like colour = \"red\" size = 3. may also parameters paired geom/stat. arrow_head, arrow_fins, arrow_mid function call one arrow ornament functions can determine shape arrow head, fins middle (interior) arrows. length_head, length_fins, length_mid Determines length arrow ornaments. Can one following: numeric(1) (default) set ornament size relative linewidth shaft. <unit> control size absolute manner. Behaviour relative units \"npc\" \"null\" undefined. justify numeric(1) [0-1] control arrows drawn relative path's endpoints. value 0 sets arrow's tips path's end, whereas value 1 sets arrow's base path's end. force_arrow logical(1) , TRUE arrow drawn even length arrow shorter arrow heads fins. FALSE, drop arrows. mid_place Sets location middle (interior) arrows, applicable. Can one following: numeric vector values [0-1] set middle arrows relative positions along arc-length path. <unit> fill path arrows provided unit distance one arrow next. resect, resect_head, resect_fins numeric(1) denoting millimetres <unit> shorten arrow. resect_head shortens arrow arrow head side, whereas resect_fins shortens arrow fins side. inherit resect. lineend Line end style (round, butt, square). linejoin Line join style (round, mitre, bevel). linemitre Line mitre limit (number greater 1). na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_segment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrow segments — geom_arrow_segment","text":"<Layer> ggproto object can added plot.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_segment.html","id":"aesthetics","dir":"Reference","previous_headings":"","what":"Aesthetics","title":"Arrow segments — geom_arrow_segment","text":"geom_arrow_segment() understands following aesthetics (required aesthetics bold): x y xend yend alpha arrow_fins arrow_head arrow_mid colour group linewidth linewidth_fins linewidth_head stroke_colour stroke_width linewidth_fins linewidth_head inherit linewidth.  can used seperately control start- end-width. Learn setting aesthetics vignette(\"ggplot2-specs\").","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggarrow/reference/geom_arrow_segment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrow segments — geom_arrow_segment","text":"","code":"# Setup dummy data set.seed(42) df <- data.frame(   x = LETTERS[1:6],   y = 6:1 + rnorm(6) )  # We can omit either `xend` or `yend` for this segment geom p <- ggplot(df, aes(x, y = 0, yend = y, colour = x)) p + geom_arrow_segment()   # We can set the linewidth globally p + geom_arrow_segment(aes(linewidth = y))   # Or seperately for the head and fins p + geom_arrow_segment(aes(linewidth_head = y, linewidth_fins = 0))   # We can also place arrows in the middle p + geom_arrow_segment(   arrow_mid = arrow_head_line(), mid_place = c(0.33, 0.66),   arrow_head = NULL # Turn off head )"},{"path":"https://teunbrand.github.io/ggarrow/reference/ggarrow-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ggarrow: Arrows for 'ggplot2' — ggarrow-package","title":"ggarrow: Arrows for 'ggplot2' — ggarrow-package","text":"'ggplot2' extension adds specialised arrow geometry layers (geoms). offers arrow options standard 'grid' arrows built-many line-based geom layers.","code":""},{"path":[]},{"path":"https://teunbrand.github.io/ggarrow/reference/ggarrow-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ggarrow: Arrows for 'ggplot2' — ggarrow-package","text":"Maintainer: Teun van den Brand tahvdbrand@gmail.com (ORCID)","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/ggarrow_extensions.html","id":null,"dir":"Reference","previous_headings":"","what":"ggarrow extensions to ggplot2 — GeomArrow","title":"ggarrow extensions to ggplot2 — GeomArrow","text":"ggarrow relieas extension mechanism ggplot2 ggproto class objects, allow cross-package inheritance geoms. objects can ignored users purpose making plots, since interacting objects preferred various geom_*() functions.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrow grob — grob_arrow","title":"Arrow grob — grob_arrow","text":"Creates graphical object draws arrows. arrow typically consists three parts: arrowhead, shaft fins. Relative arrow drawn coordinates, three parts describe end, middle beginning arrow line.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrow grob — grob_arrow","text":"","code":"grob_arrow(   x = unit(c(0, 1), \"npc\"),   y = unit(c(0, 1), \"npc\"),   id = NULL,   id.lengths = NULL,   arrow_head = arrow_head_wings(),   arrow_fins = NULL,   arrow_mid = NULL,   length_head = unit(5, \"mm\"),   length_fins = NULL,   length_mid = NULL,   justify = 0,   shaft_width = unit(1, \"mm\"),   mid_place = 0.5,   resect = unit(0, \"mm\"),   resect_fins = NULL,   resect_head = NULL,   force_arrow = FALSE,   default.units = \"mm\",   name = NULL,   gp = gpar(),   vp = NULL )"},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrow grob — grob_arrow","text":"x numeric vector unit object specifying x-values. y numeric vector unit object specifying y-values. id numeric vector used separate locations x     y multiple lines.  locations     id belong line. id.lengths numeric vector used separate locations x     y multiple lines.  Specifies consecutive blocks     locations make separate lines. arrow_head, arrow_fins, arrow_mid <matrix[n, 2]>, returned arrow ornament functions, giving arrow shapes. matrix can () notch_angle attribute used fuse shaft arrow ornaments. NULL, ornament drawn. length_head, length_fins, length_mid <unit> object controlling size arrow ornaments. justify numeric(1) [0-1] control arrows drawn relative path's endpoints. value 0 sets arrow's tips path's end, whereas value 1 sets arrow's base path's end. shaft_width <unit> object controlling width arrow's shaft. mid_place Sets location middle (interior) arrows, applicable. Can one following: numeric vector values [0-1] set middle arrows relative positions along arc-length path. <unit> fill path arrows provided unit distance one arrow next. resect, resect_fins, resect_head <unit> object can used create offset endings coordinates arrow displayed visually. resect_fins resect_head control offset start end arrow respectively default resect. force_arrow logical(1) , TRUE arrow drawn even length arrow shorter arrow heads fins. FALSE, drop arrows. default.units string indicating default units use     x y given numeric vectors. name character identifier. gp object class \"gpar\", typically output     call function gpar.  basically     list graphical parameter settings. vp Grid viewport object (NULL).","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrow grob — grob_arrow","text":"<arrow_path>  graphical object.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrow grob — grob_arrow","text":"","code":"requireNamespace(\"grid\")  # Creating an arrow arrow <- grob_arrow(   x = unit(c(0.2, 0.5, 0.8, 0.2, 0.5, 0.8), \"npc\"),   y = unit(c(0.2, 0.8, 0.2, 0.8, 0.2, 0.8), \"npc\"),   id.lengths  = c(3, 3),   arrow_head  = arrow_head_wings(),   arrow_fins  = arrow_fins_feather(),   length_fins = 8,   shaft_width = 1,   gp = grid::gpar(fill = c(\"dodgerblue\", \"tomato\"), col = \"black\") )  # Drawing the arrow grid::grid.newpage(); grid::grid.draw(arrow)"},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow_curve.html","id":null,"dir":"Reference","previous_headings":"","what":"Arrow curve grob. — grob_arrow_curve","title":"Arrow curve grob. — grob_arrow_curve","text":"Creates graphical object draws curved arrows.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow_curve.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arrow curve grob. — grob_arrow_curve","text":"","code":"grob_arrow_curve(   x1,   y1,   x2,   y2,   default.units = \"mm\",   curvature = 1,   angle = 90,   ncp = 1,   shape = 0.5,   square = TRUE,   squareShape = 1,   inflect = FALSE,   open = TRUE,   name = NULL,   gp = gpar(),   vp = NULL,   ...,   width_head = unit(1, \"mm\"),   width_fins = unit(1, \"mm\") )"},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow_curve.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arrow curve grob. — grob_arrow_curve","text":"x1 numeric vector unit object specifying x-location     start point. y1 numeric vector unit object specifying y-location     start point. x2 numeric vector unit object specifying x-location     end point. y2 numeric vector unit object specifying y-location     end point. default.units string indicating default units use     x1, y1, x2 y2     given numeric values. curvature numeric value giving amount curvature.     Negative values produce left-hand curves, positive values     produce right-hand curves, zero produces straight line. angle numeric value 0 180,     giving amount skew control     points curve.  Values less 90 skew curve towards     start point values greater 90 skew curve     towards end point. ncp number control points used draw curve.     control points creates smoother curve. shape numeric vector values -1 1,     control shape curve relative control points.     See grid.xspline details. square logical value controls whether control     points curve created city-block fashion     obliquely.  ncp 1 angle 90,     typically TRUE, otherwise probably     set FALSE (see Examples ). squareShape shape value control behaviour     curve relative additional control point     inserted square TRUE. inflect logical value specifying whether curve     cut half inverted (see Examples ). open logical value indicating whether close curve     (connect start end points). name character identifier. gp object class \"gpar\", typically output     call function gpar.  basically     list graphical parameter settings. vp Grid viewport object (NULL). ... Arguments passed grob_arrow arrow_head,arrow_fins,arrow_mid <matrix[n, 2]>, returned arrow ornament functions, giving arrow shapes. matrix can () notch_angle attribute used fuse shaft arrow ornaments. NULL, ornament drawn. length_head,length_fins,length_mid <unit> object controlling size arrow ornaments. resect,resect_fins,resect_head <unit> object can used create offset endings coordinates arrow displayed visually. resect_fins resect_head control offset start end arrow respectively default resect. force_arrow logical(1) , TRUE arrow drawn even length arrow shorter arrow heads fins. FALSE, drop arrows. justify numeric(1) [0-1] control arrows drawn relative path's endpoints. value 0 sets arrow's tips path's end, whereas value 1 sets arrow's base path's end. mid_place Sets location middle (interior) arrows, applicable. Can one following: numeric vector values [0-1] set middle arrows relative positions along arc-length path. <unit> fill path arrows provided unit distance one arrow next. x numeric vector unit object specifying x-values. y numeric vector unit object specifying y-values. id numeric vector used separate locations x     y multiple lines.  locations     id belong line. id.lengths numeric vector used separate locations x     y multiple lines.  Specifies consecutive blocks     locations make separate lines. width_fins, width_head <unit> object controlling width arrow's shaft (x1, y1) (x2, y2) location respectively.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow_curve.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arrow curve grob. — grob_arrow_curve","text":"<curve_arrow>  graphical object.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/grob_arrow_curve.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Arrow curve grob. — grob_arrow_curve","text":"","code":"requireNamespace(\"grid\")  # Creating the curved arrow grob <- grob_arrow_curve(   x1 = unit(0.25, \"npc\"), y1 = unit(0.25, \"npc\"),   x2 = unit(0.75, \"npc\"), y2 = unit(0.75, \"npc\"),   angle = 90, curvature = 0.5, ncp = 5,   arrow_head = arrow_head_line() )  # Drawing the arrow grid::grid.newpage(); grid::grid.draw(grob)"},{"path":"https://teunbrand.github.io/ggarrow/reference/whirlpool.html","id":null,"dir":"Reference","previous_headings":"","what":"Whirlpool data — whirlpool","title":"Whirlpool data — whirlpool","text":"function returns made-data test arrow functionality .","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/whirlpool.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Whirlpool data — whirlpool","text":"","code":"whirlpool(n = 5, detail = 100)"},{"path":"https://teunbrand.github.io/ggarrow/reference/whirlpool.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Whirlpool data — whirlpool","text":"n number streams whirlpool. detail number points per stream.","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/whirlpool.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Whirlpool data — whirlpool","text":"data.frame","code":""},{"path":"https://teunbrand.github.io/ggarrow/reference/whirlpool.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Whirlpool data — whirlpool","text":"","code":"whirlpool() #>                 x            y group        arc #> 1    3.184082e-17 -0.260000000     1 0.00000000 #> 2    8.566542e-03 -0.269864066     1 0.01306466 #> 3    1.775870e-02 -0.279436269     1 0.02633579 #> 4    2.756625e-02 -0.288686858     1 0.03981769 #> 5    3.797774e-02 -0.297586444     1 0.05351446 #> 6    4.898043e-02 -0.306106055     1 0.06743003 #> 7    6.056040e-02 -0.314217183     1 0.08156814 #> 8    7.270248e-02 -0.321891830     1 0.09593234 #> 9    8.539032e-02 -0.329102558     1 0.11052603 #> 10   9.860639e-02 -0.335822541     1 0.12535246 #> 11   1.123320e-01 -0.342025602     1 0.14041470 #> 12   1.265475e-01 -0.347686270     1 0.15571572 #> 13   1.412317e-01 -0.352779815     1 0.17125832 #> 14   1.563629e-01 -0.357282298     1 0.18704517 #> 15   1.719180e-01 -0.361170615     1 0.20307885 #> 16   1.878729e-01 -0.364422534     1 0.21936179 #> 17   2.042026e-01 -0.367016738     1 0.23589632 #> 18   2.208813e-01 -0.368932868     1 0.25268468 #> 19   2.378820e-01 -0.370151554     1 0.26972898 #> 20   2.551769e-01 -0.370654462     1 0.28703127 #> 21   2.727376e-01 -0.370424318     1 0.30459349 #> 22   2.905347e-01 -0.369444955     1 0.32241749 #> 23   3.085381e-01 -0.367701333     1 0.34050506 #> 24   3.267168e-01 -0.365179580     1 0.35885789 #> 25   3.450395e-01 -0.361867019     1 0.37747762 #> 26   3.634740e-01 -0.357752193     1 0.39636580 #> 27   3.819877e-01 -0.352824894     1 0.41552393 #> 28   4.005473e-01 -0.347076189     1 0.43495344 #> 29   4.191191e-01 -0.340498440     1 0.45465570 #> 30   4.376690e-01 -0.333085328     1 0.47463203 #> 31   4.561625e-01 -0.324831869     1 0.49488370 #> 32   4.745648e-01 -0.315734436     1 0.51541190 #> 33   4.928407e-01 -0.305790771     1 0.53621782 #> 34   5.109550e-01 -0.295000000     1 0.55730256 #> 35   5.288720e-01 -0.283362645     1 0.57866721 #> 36   5.465562e-01 -0.270880634     1 0.60031278 #> 37   5.639718e-01 -0.257557308     1 0.62224029 #> 38   5.810832e-01 -0.243397429     1 0.64445067 #> 39   5.978546e-01 -0.228407182     1 0.66694485 #> 40   6.142505e-01 -0.212594176     1 0.68972372 #> 41   6.302355e-01 -0.195967448     1 0.71278812 #> 42   6.457742e-01 -0.178537455     1 0.73613888 #> 43   6.608319e-01 -0.160316076     1 0.75977678 #> 44   6.753737e-01 -0.141316601     1 0.78370260 #> 45   6.893654e-01 -0.121553724     1 0.80791706 #> 46   7.027732e-01 -0.101043535     1 0.83242087 #> 47   7.155637e-01 -0.079803504     1 0.85721472 #> 48   7.277040e-01 -0.057852469     1 0.88229927 #> 49   7.391618e-01 -0.035210618     1 0.90767516 #> 50   7.499056e-01 -0.011899473     1 0.93334300 #> 51   7.599043e-01  0.012058133     1 0.95930338 #> 52   7.691279e-01  0.036638075     1 0.98555689 #> 53   7.775467e-01  0.061814966     1 1.01210408 #> 54   7.851324e-01  0.087562178     1 1.03894549 #> 55   7.918572e-01  0.113851871     1 1.06608164 #> 56   7.976943e-01  0.140655024     1 1.09351303 #> 57   8.026180e-01  0.167941468     1 1.12124015 #> 58   8.066036e-01  0.195679916     1 1.14926347 #> 59   8.096274e-01  0.223838003     1 1.17758345 #> 60   8.116669e-01  0.252382319     1 1.20620053 #> 61   8.127007e-01  0.281278448     1 1.23511515 #> 62   8.127086e-01  0.310491013     1 1.26432771 #> 63   8.116718e-01  0.339983711     1 1.29383863 #> 64   8.095725e-01  0.369719362     1 1.32364829 #> 65   8.063944e-01  0.399659951     1 1.35375708 #> 66   8.021226e-01  0.429766678     1 1.38416536 #> 67   7.967434e-01  0.460000000     1 1.41487350 #> 68   7.902446e-01  0.490319685     1 1.44588183 #> 69   7.826157e-01  0.520684860     1 1.47719070 #> 70   7.738472e-01  0.551054064     1 1.50880043 #> 71   7.639314e-01  0.581385300     1 1.54071135 #> 72   7.528621e-01  0.611636087     1 1.57292376 #> 73   7.406346e-01  0.641763519     1 1.60543797 #> 74   7.272458e-01  0.671724317     1 1.63825426 #> 75   7.126942e-01  0.701474888     1 1.67137293 #> 76   6.969798e-01  0.730971378     1 1.70479424 #> 77   6.801044e-01  0.760169739     1 1.73851848 #> 78   6.620712e-01  0.789025776     1 1.77254590 #> 79   6.428853e-01  0.817495219     1 1.80687675 #> 80   6.225533e-01  0.845533770     1 1.84151129 #> 81   6.010835e-01  0.873097176     1 1.87644976 #> 82   5.784857e-01  0.900141280     1 1.91169240 #> 83   5.547716e-01  0.926622086     1 1.94723943 #> 84   5.299544e-01  0.952495821     1 1.98309107 #> 85   5.040492e-01  0.977718994     1 2.01924756 #> 86   4.770724e-01  1.002248457     1 2.05570909 #> 87   4.490422e-01  1.026041472     1 2.09247588 #> 88   4.199786e-01  1.049055764     1 2.12954814 #> 89   3.899030e-01  1.071249588     1 2.16692605 #> 90   3.588385e-01  1.092581785     1 2.20460981 #> 91   3.268098e-01  1.113011849     1 2.24259961 #> 92   2.938431e-01  1.132499981     1 2.28089563 #> 93   2.599664e-01  1.151007149     1 2.31949806 #> 94   2.252090e-01  1.168495150     1 2.35840706 #> 95   1.896017e-01  1.184926666     1 2.39762281 #> 96   1.531769e-01  1.200265324     1 2.43714547 #> 97   1.159684e-01  1.214475746     1 2.47697521 #> 98   7.801142e-02  1.227523612     1 2.51711219 #> 99   3.934264e-02  1.239375713     1 2.55755656 #> 100  0.000000e+00  1.250000000     1 2.59830848 #> 101 -2.472747e-01 -0.080344419     2 0.00000000 #> 102 -2.540088e-01 -0.091539848     2 0.01306466 #> 103 -2.602719e-01 -0.103240081     2 0.02633579 #> 104 -2.660391e-01 -0.115426209     2 0.03981769 #> 105 -2.712858e-01 -0.128078242     2 0.05351446 #> 106 -2.759884e-01 -0.141175133     2 0.06743003 #> 107 -2.801241e-01 -0.154694811     2 0.08156814 #> 108 -2.836710e-01 -0.168614209     2 0.09593234 #> 109 -2.866081e-01 -0.182909300     2 0.11052603 #> 110 -2.889152e-01 -0.197555127     2 0.12535246 #> 111 -2.905732e-01 -0.212525843     2 0.14041470 #> 112 -2.915640e-01 -0.227794746     2 0.15571572 #> 113 -2.918705e-01 -0.243334318     2 0.17125832 #> 114 -2.914769e-01 -0.259116265     2 0.18704517 #> 115 -2.903681e-01 -0.275111559     2 0.20307885 #> 116 -2.885305e-01 -0.291290477     2 0.21936179 #> 117 -2.859516e-01 -0.307622650     2 0.23589632 #> 118 -2.826199e-01 -0.324077105     2 0.25268468 #> 119 -2.785255e-01 -0.340622309     2 0.26972898 #> 120 -2.736593e-01 -0.357226218     2 0.28703127 #> 121 -2.680139e-01 -0.373856326     2 0.30459349 #> 122 -2.615829e-01 -0.390479711     2 0.32241749 #> 123 -2.543612e-01 -0.407063086     2 0.34050506 #> 124 -2.463454e-01 -0.423572848     2 0.35885789 #> 125 -2.375329e-01 -0.439975129     2 0.37747762 #> 126 -2.279229e-01 -0.456235850     2 0.39636580 #> 127 -2.175157e-01 -0.472320769     2 0.41552393 #> 128 -2.063132e-01 -0.488195536     2 0.43495344 #> 129 -1.943183e-01 -0.503825747     2 0.45465570 #> 130 -1.815358e-01 -0.519176993     2 0.47463203 #> 131 -1.679715e-01 -0.534214918     2 0.49488370 #> 132 -1.536327e-01 -0.548905268     2 0.51541190 #> 133 -1.385281e-01 -0.563213951     2 0.53621782 #> 134 -1.226679e-01 -0.577107084     2 0.55730256 #> 135 -1.060634e-01 -0.590551052     2 0.57866721 #> 136 -8.872764e-02 -0.603512557     2 0.60031278 #> 137 -7.067467e-02 -0.615958676     2 0.62224029 #> 138 -5.192013e-02 -0.627856911     2 0.64445067 #> 139 -3.248090e-02 -0.639175243     2 0.66694485 #> 140 -1.237522e-02 -0.649882185     2 0.68972372 #> 141  8.377355e-03 -0.659946831     2 0.71278812 #> 142  2.975601e-02 -0.669338913     2 0.73613888 #> 143  5.173863e-02 -0.678028845     2 0.75977678 #> 144  7.430187e-02 -0.685987778     2 0.78370260 #> 145  9.742117e-02 -0.693187648     2 0.80791706 #> 146  1.210708e-01 -0.699601223     2 0.83242087 #> 147  1.452237e-01 -0.705202153     2 0.85721472 #> 148  1.698519e-01 -0.709965014     2 0.88229927 #> 149  1.949263e-01 -0.713865355     2 0.90767516 #> 150  2.204165e-01 -0.716879743     2 0.93334300 #> 151  2.462913e-01 -0.718985804     2 0.95930338 #> 152  2.725185e-01 -0.720162267     2 0.98555689 #> 153  2.990647e-01 -0.720389005     2 1.01210408 #> 154  3.258958e-01 -0.719647072     2 1.03894549 #> 155  3.529769e-01 -0.717918743     2 1.06608164 #> 156  3.802720e-01 -0.715187550     2 1.09351303 #> 157  4.077444e-01 -0.711438317     2 1.12124015 #> 158  4.353569e-01 -0.706657192     2 1.14926347 #> 159  4.630712e-01 -0.700831680     2 1.17758345 #> 160  4.908487e-01 -0.693950674     2 1.20620053 #> 161  5.186500e-01 -0.686004480     2 1.23511515 #> 162  5.464353e-01 -0.676984847     2 1.26432771 #> 163  5.741641e-01 -0.666884990     2 1.29383863 #> 164  6.017957e-01 -0.655699613     2 1.32364829 #> 165  6.292888e-01 -0.643424929     2 1.35375708 #> 166  6.566019e-01 -0.630058681     2 1.38416536 #> 167  6.836932e-01 -0.615600158     2 1.41487350 #> 168  7.105208e-01 -0.600050208     2 1.44588183 #> 169  7.370423e-01 -0.583411256     2 1.47719070 #> 170  7.632155e-01 -0.565687308     2 1.50880043 #> 171  7.889981e-01 -0.546883967     2 1.54071135 #> 172  8.143477e-01 -0.527008433     2 1.57292376 #> 173  8.392220e-01 -0.506069512     2 1.60543797 #> 174  8.635791e-01 -0.484077619     2 1.63825426 #> 175  8.873769e-01 -0.461044774     2 1.67137293 #> 176  9.105737e-01 -0.436984604     2 1.70479424 #> 177  9.331282e-01 -0.411912335     2 1.73851848 #> 178  9.549994e-01 -0.385844791     2 1.77254590 #> 179  9.761467e-01 -0.358800382     2 1.80687675 #> 180  9.965300e-01 -0.330799093     2 1.84151129 #> 181  1.016110e+00 -0.301862472     2 1.87644976 #> 182  1.034847e+00 -0.272013618     2 1.91169240 #> 183  1.052704e+00 -0.241277157     2 1.94723943 #> 184  1.069642e+00 -0.209679230     2 1.98309107 #> 185  1.085626e+00 -0.177247467     2 2.01924756 #> 186  1.100618e+00 -0.144010964     2 2.05570909 #> 187  1.114585e+00 -0.110000258     2 2.09247588 #> 188  1.127492e+00 -0.075247301     2 2.12954814 #> 189  1.139306e+00 -0.039785426     2 2.16692605 #> 190  1.149994e+00 -0.003649319     2 2.20460981 #> 191  1.159527e+00  0.033125019     2 2.24259961 #> 192  1.167874e+00  0.070500302     2 2.28089563 #> 193  1.175007e+00  0.108438004     2 2.31949806 #> 194  1.180898e+00  0.146898390     2 2.35840706 #> 195  1.185522e+00  0.185840568     2 2.39762281 #> 196  1.188854e+00  0.225222523     2 2.43714547 #> 197  1.190871e+00  0.265001168     2 2.47697521 #> 198  1.191551e+00  0.305132387     2 2.51711219 #> 199  1.190874e+00  0.345571086     2 2.55755656 #> 200  1.188821e+00  0.386271243     2 2.59830848 #> 201 -1.528242e-01  0.210344419     3 0.00000000 #> 202 -1.655526e-01  0.213289329     3 0.01306466 #> 203 -1.786156e-01  0.215630390     3 0.02633579 #> 204 -1.919874e-01  0.217349537     3 0.03981769 #> 205 -2.056416e-01  0.218429737     3 0.05351446 #> 206 -2.195506e-01  0.218855025     3 0.06743003 #> 207 -2.336866e-01  0.218610532     3 0.08156814 #> 208 -2.480208e-01  0.217682517     3 0.09593234 #> 209 -2.625238e-01  0.216058394     3 0.11052603 #> 210 -2.771658e-01  0.213726758     3 0.12535246 #> 211 -2.919161e-01  0.210677408     3 0.14041470 #> 212 -3.067439e-01  0.206901374     3 0.15571572 #> 213 -3.216176e-01  0.202390935     3 0.17125832 #> 214 -3.365055e-01  0.197139639     3 0.18704517 #> 215 -3.513753e-01  0.191142321     3 0.20307885 #> 216 -3.661945e-01  0.184395119     3 0.21936179 #> 217 -3.809304e-01  0.176895485     3 0.23589632 #> 218 -3.955500e-01  0.168642202     3 0.25268468 #> 219 -4.100202e-01  0.159635390     3 0.26972898 #> 220 -4.243077e-01  0.149876517     3 0.28703127 #> 221 -4.383793e-01  0.139368402     3 0.30459349 #> 222 -4.522018e-01  0.128115221     3 0.32241749 #> 223 -4.657419e-01  0.116122510     3 0.34050506 #> 224 -4.789666e-01  0.103397164     3 0.35885789 #> 225 -4.918429e-01  0.089947435     3 0.37747762 #> 226 -5.043381e-01  0.075782931     3 0.39636580 #> 227 -5.164198e-01  0.060914605     3 0.41552393 #> 228 -5.280558e-01  0.045354754     3 0.43495344 #> 229 -5.392144e-01  0.029117004     3 0.45465570 #> 230 -5.498643e-01  0.012216300     3 0.47463203 #> 231 -5.599746e-01 -0.005331107     3 0.49488370 #> 232 -5.695150e-01 -0.023507676     3 0.51541190 #> 233 -5.784558e-01 -0.042294594     3 0.53621782 #> 234 -5.867679e-01 -0.061671793     3 0.55730256 #> 235 -5.944228e-01 -0.081617977     3 0.57866721 #> 236 -6.013929e-01 -0.102110639     3 0.60031278 #> 237 -6.076512e-01 -0.123126089     3 0.62224029 #> 238 -6.131716e-01 -0.144639482     3 0.64445067 #> 239 -6.179289e-01 -0.166624843     3 0.66694485 #> 240 -6.218988e-01 -0.189055103     3 0.68972372 #> 241 -6.250580e-01 -0.211902125     3 0.71278812 #> 242 -6.273840e-01 -0.235136743     3 0.73613888 #> 243 -6.288556e-01 -0.258728795     3 0.75977678 #> 244 -6.294526e-01 -0.282647162     3 0.78370260 #> 245 -6.291558e-01 -0.306859803     3 0.80791706 #> 246 -6.279474e-01 -0.331333799     3 0.83242087 #> 247 -6.258105e-01 -0.356035396     3 0.85721472 #> 248 -6.227297e-01 -0.380930041     3 0.88229927 #> 249 -6.186908e-01 -0.405982435     3 0.90767516 #> 250 -6.136807e-01 -0.431156574     3 0.93334300 #> 251 -6.076879e-01 -0.456415797     3 0.95930338 #> 252 -6.007022e-01 -0.481722834     3 0.98555689 #> 253 -5.927146e-01 -0.507039856     3 1.01210408 #> 254 -5.837177e-01 -0.532328528     3 1.03894549 #> 255 -5.737054e-01 -0.557550055     3 1.06608164 #> 256 -5.626733e-01 -0.582665238     3 1.09351303 #> 257 -5.506181e-01 -0.607634529     3 1.12124015 #> 258 -5.375383e-01 -0.632418079     3 1.14926347 #> 259 -5.234337e-01 -0.656975802     3 1.17758345 #> 260 -5.083057e-01 -0.681267422     3 1.20620053 #> 261 -4.921574e-01 -0.705252533     3 1.23511515 #> 262 -4.749931e-01 -0.728890658     3 1.26432771 #> 263 -4.568189e-01 -0.752141301     3 1.29383863 #> 264 -4.376423e-01 -0.774964009     3 1.32364829 #> 265 -4.174725e-01 -0.797318427     3 1.35375708 #> 266 -3.963203e-01 -0.819164358     3 1.38416536 #> 267 -3.741977e-01 -0.840461821     3 1.41487350 #> 268 -3.511187e-01 -0.861171109     3 1.44588183 #> 269 -3.270985e-01 -0.881252846     3 1.47719070 #> 270 -3.021540e-01 -0.900668048     3 1.50880043 #> 271 -2.763038e-01 -0.919378179     3 1.54071135 #> 272 -2.495675e-01 -0.937345211     3 1.57292376 #> 273 -2.219668e-01 -0.954531679     3 1.60543797 #> 274 -1.935246e-01 -0.970900739     3 1.63825426 #> 275 -1.642651e-01 -0.986416229     3 1.67137293 #> 276 -1.342143e-01 -1.001042716     3 1.70479424 #> 277 -1.033994e-01 -1.014745562     3 1.73851848 #> 278 -7.184917e-02 -1.027490972     3 1.77254590 #> 279 -3.959354e-02 -1.039246050     3 1.80687675 #> 280 -6.663940e-03 -1.049978853     3 1.84151129 #> 281  2.690691e-02 -1.059658444     3 1.87644976 #> 282  6.108503e-02 -1.068254941     3 1.91169240 #> 283  9.583516e-02 -1.075739570     3 1.94723943 #> 284  1.311208e-01 -1.082084712     3 1.98309107 #> 285  1.669045e-01 -1.087263952     3 2.01924756 #> 286  2.031472e-01 -1.091252128     3 2.05570909 #> 287  2.398093e-01 -1.094025371     3 2.09247588 #> 288  2.768497e-01 -1.095561154     3 2.12954814 #> 289  3.142266e-01 -1.095838333     3 2.16692605 #> 290  3.518970e-01 -1.094837188     3 2.20460981 #> 291  3.898173e-01 -1.092539462     3 2.24259961 #> 292  4.279427e-01 -1.088928398     3 2.28089563 #> 293  4.662278e-01 -1.083988777     3 2.31949806 #> 294  5.046263e-01 -1.077706952     3 2.35840706 #> 295  5.430914e-01 -1.070070879     3 2.39762281 #> 296  5.815756e-01 -1.061070149     3 2.43714547 #> 297  6.200305e-01 -1.050696017     3 2.47697521 #> 298  6.584077e-01 -1.038941426     3 2.51711219 #> 299  6.966579e-01 -1.025801036     3 2.55755656 #> 300  7.347316e-01 -1.011271243     3 2.59830848 #> 301  1.528242e-01  0.210344419     4 0.00000000 #> 302  1.516916e-01  0.223359903     4 0.01306466 #> 303  1.498814e-01  0.236506991     4 0.02633579 #> 304  1.473843e-01  0.249755611     4 0.03981769 #> 305  1.441923e-01  0.263075244     4 0.05351446 #> 306  1.402986e-01  0.276434977     4 0.06743003 #> 307  1.356978e-01  0.289803550     4 0.08156814 #> 308  1.303857e-01  0.303149404     4 0.09593234 #> 309  1.243594e-01  0.316440731     4 0.11052603 #> 310  1.176173e-01  0.329645527     4 0.12535246 #> 311  1.101591e-01  0.342731642     4 0.14041470 #> 312  1.019858e-01  0.355666827     4 0.15571572 #> 313  9.309990e-02  0.368418795     4 0.17125832 #> 314  8.350502e-02  0.380955263     4 0.18704517 #> 315  7.320621e-02  0.393244010     4 0.20307885 #> 316  6.220984e-02  0.405252928     4 0.21936179 #> 317  5.052363e-02  0.416950072     4 0.23589632 #> 318  3.815659e-02  0.428303718     4 0.25268468 #> 319  2.511908e-02  0.439282406     4 0.26972898 #> 320  1.142275e-02  0.449855000     4 0.28703127 #> 321 -2.919440e-03  0.459990736     4 0.30459349 #> 322 -1.789323e-02  0.469659272     4 0.32241749 #> 323 -3.348311e-02  0.478830744     4 0.34050506 #> 324 -4.967228e-02  0.487475809     4 0.35885789 #> 325 -6.644273e-02  0.495565701     4 0.37747762 #> 326 -8.377520e-02  0.503072277     4 0.39636580 #> 327 -1.016493e-01  0.509968065     4 0.41552393 #> 328 -1.200433e-01  0.516226316     4 0.43495344 #> 329 -1.389345e-01  0.521821045     4 0.45465570 #> 330 -1.582990e-01  0.526727082     4 0.47463203 #> 331 -1.781119e-01  0.530920112     4 0.49488370 #> 332 -1.983470e-01  0.534376726     4 0.51541190 #> 333 -2.189772e-01  0.537074455     4 0.53621782 #> 334 -2.399746e-01  0.538991820     4 0.55730256 #> 335 -2.613101e-01  0.540108368     4 0.57866721 #> 336 -2.829536e-01  0.540404711     4 0.60031278 #> 337 -3.048744e-01  0.539862568     4 0.62224029 #> 338 -3.270408e-01  0.538464795     4 0.64445067 #> 339 -3.494202e-01  0.536195427     4 0.66694485 #> 340 -3.719794e-01  0.533039705     4 0.68972372 #> 341 -3.946844e-01  0.528984116     4 0.71278812 #> 342 -4.175007e-01  0.524016414     4 0.73613888 #> 343 -4.403928e-01  0.518125655     4 0.75977678 #> 344 -4.633250e-01  0.511302225     4 0.78370260 #> 345 -4.862609e-01  0.503537860     4 0.80791706 #> 346 -5.091636e-01  0.494825674     4 0.83242087 #> 347 -5.319959e-01  0.485160178     4 0.85721472 #> 348 -5.547201e-01  0.474537301     4 0.88229927 #> 349 -5.772982e-01  0.462954411     4 0.90767516 #> 350 -5.996920e-01  0.450410326     4 0.93334300 #> 351 -6.218631e-01  0.436905328     4 0.95930338 #> 352 -6.437728e-01  0.422441183     4 0.98555689 #> 353 -6.653824e-01  0.407021140     4 1.01210408 #> 354 -6.866532e-01  0.390649948     4 1.03894549 #> 355 -7.075463e-01  0.373333859     4 1.06608164 #> 356 -7.280232e-01  0.355080629     4 1.09351303 #> 357 -7.480451e-01  0.335899526     4 1.12124015 #> 358 -7.675738e-01  0.315801324     4 1.14926347 #> 359 -7.865710e-01  0.294798305     4 1.17758345 #> 360 -8.049989e-01  0.272904251     4 1.20620053 #> 361 -8.228200e-01  0.250134443     4 1.23511515 #> 362 -8.399971e-01  0.226505646     4 1.26432771 #> 363 -8.564937e-01  0.202036102     4 1.29383863 #> 364 -8.722735e-01  0.176745515     4 1.32364829 #> 365 -8.873010e-01  0.150655041     4 1.35375708 #> 366 -9.015413e-01  0.123787266     4 1.38416536 #> 367 -9.149601e-01  0.096166186     4 1.41487350 #> 368 -9.275240e-01  0.067817193     4 1.44588183 #> 369 -9.392003e-01  0.038767045     4 1.47719070 #> 370 -9.499570e-01  0.009043842     4 1.50880043 #> 371 -9.597632e-01 -0.021322996     4 1.54071135 #> 372 -9.685889e-01 -0.052302767     4 1.57292376 #> 373 -9.764051e-01 -0.083863508     4 1.60543797 #> 374 -9.831839e-01 -0.115972037     4 1.63825426 #> 375 -9.888983e-01 -0.148593982     4 1.67137293 #> 376 -9.935227e-01 -0.181693819     4 1.70479424 #> 377 -9.970326e-01 -0.215234912     4 1.73851848 #> 378 -9.994046e-01 -0.249179552     4 1.77254590 #> 379 -1.000617e+00 -0.283489000     4 1.80687675 #> 380 -1.000649e+00 -0.318123526     4 1.84151129 #> 381 -9.994804e-01 -0.353042463     4 1.87644976 #> 382 -9.970945e-01 -0.388204245     4 1.91169240 #> 383 -9.934744e-01 -0.423566460     4 1.94723943 #> 384 -9.886051e-01 -0.459085901     4 1.98309107 #> 385 -9.824732e-01 -0.494718611     4 2.01924756 #> 386 -9.750665e-01 -0.530419942     4 2.05570909 #> 387 -9.663748e-01 -0.566144605     4 2.09247588 #> 388 -9.563893e-01 -0.601846729     4 2.12954814 #> 389 -9.451028e-01 -0.637479910     4 2.16692605 #> 390 -9.325099e-01 -0.672997276     4 2.20460981 #> 391 -9.186066e-01 -0.708351540     4 2.24259961 #> 392 -9.033909e-01 -0.743495063     4 2.28089563 #> 393 -8.868623e-01 -0.778379911     4 2.31949806 #> 394 -8.690221e-01 -0.812957916     4 2.35840706 #> 395 -8.498734e-01 -0.847180742     4 2.39762281 #> 396 -8.294209e-01 -0.880999940     4 2.43714547 #> 397 -8.076713e-01 -0.914367018     4 2.47697521 #> 398 -7.846328e-01 -0.947233500     4 2.51711219 #> 399 -7.603156e-01 -0.979550992     4 2.55755656 #> 400 -7.347316e-01 -1.011271243     4 2.59830848 #> 401  2.472747e-01 -0.080344419     5 0.00000000 #> 402  2.593032e-01 -0.075245317     5 0.01306466 #> 403  2.712474e-01 -0.069461031     5 0.02633579 #> 404  2.830760e-01 -0.062992081     5 0.03981769 #> 405  2.947573e-01 -0.055840295     5 0.05351446 #> 406  3.062599e-01 -0.048008813     5 0.06743003 #> 407  3.175525e-01 -0.039502088     5 0.08156814 #> 408  3.286036e-01 -0.030325882     5 0.09593234 #> 409  3.393822e-01 -0.020487267     5 0.11052603 #> 410  3.498573e-01 -0.009994618     5 0.12535246 #> 411  3.599982e-01  0.001142395     5 0.14041470 #> 412  3.697746e-01  0.012912814     5 0.15571572 #> 413  3.791565e-01  0.025304402     5 0.17125832 #> 414  3.881145e-01  0.038303661     5 0.18704517 #> 415  3.966192e-01  0.051895843     5 0.20307885 #> 416  4.046423e-01  0.066064965     5 0.21936179 #> 417  4.121557e-01  0.080793832     5 0.23589632 #> 418  4.191321e-01  0.096064053     5 0.25268468 #> 419  4.255446e-01  0.111856067     5 0.26972898 #> 420  4.313674e-01  0.128149163     5 0.28703127 #> 421  4.365750e-01  0.144921507     5 0.30459349 #> 422  4.411432e-01  0.162150173     5 0.32241749 #> 423  4.450483e-01  0.179811165     5 0.34050506 #> 424  4.482675e-01  0.197879455     5 0.35885789 #> 425  4.507791e-01  0.216329012     5 0.37747762 #> 426  4.525622e-01  0.235132835     5 0.39636580 #> 427  4.535971e-01  0.254262992     5 0.41552393 #> 428  4.538650e-01  0.273690655     5 0.43495344 #> 429  4.533482e-01  0.293386138     5 0.45465570 #> 430  4.520301e-01  0.313318939     5 0.47463203 #> 431  4.498954e-01  0.333457782     5 0.49488370 #> 432  4.469299e-01  0.353770655     5 0.51541190 #> 433  4.431205e-01  0.374224861     5 0.53621782 #> 434  4.384554e-01  0.394787058     5 0.55730256 #> 435  4.329243e-01  0.415423306     5 0.57866721 #> 436  4.265179e-01  0.436099118     5 0.60031278 #> 437  4.192284e-01  0.456779505     5 0.62224029 #> 438  4.110493e-01  0.477429027     5 0.64445067 #> 439  4.019754e-01  0.498011841     5 0.66694485 #> 440  3.920029e-01  0.518491758     5 0.68972372 #> 441  3.811296e-01  0.538832288     5 0.71278812 #> 442  3.693544e-01  0.558996697     5 0.73613888 #> 443  3.566779e-01  0.578948061     5 0.75977678 #> 444  3.431020e-01  0.598649316     5 0.78370260 #> 445  3.286301e-01  0.618063315     5 0.80791706 #> 446  3.132670e-01  0.637152884     5 0.83242087 #> 447  2.970190e-01  0.655880875     5 0.85721472 #> 448  2.798939e-01  0.674210222     5 0.88229927 #> 449  2.619009e-01  0.692103997     5 0.90767516 #> 450  2.430506e-01  0.709525464     5 0.93334300 #> 451  2.233554e-01  0.726438139     5 0.95930338 #> 452  2.028287e-01  0.742805843     5 0.98555689 #> 453  1.814856e-01  0.758592755     5 1.01210408 #> 454  1.593427e-01  0.773763474     5 1.03894549 #> 455  1.364178e-01  0.788283069     5 1.06608164 #> 456  1.127302e-01  0.802117136     5 1.09351303 #> 457  8.830078e-02  0.815231852     5 1.12124015 #> 458  6.315156e-02  0.827594031     5 1.14926347 #> 459  3.730604e-02  0.839171174     5 1.17758345 #> 460  1.078902e-02  0.849931525     5 1.20620053 #> 461 -1.637337e-02  0.859844121     5 1.23511515 #> 462 -4.415372e-02  0.868878846     5 1.26432771 #> 463 -7.252335e-02  0.877006479     5 1.29383863 #> 464 -1.014524e-01  0.884198744     5 1.32364829 #> 465 -1.309096e-01  0.890428363     5 1.35375708 #> 466 -1.608629e-01  0.895669095     5 1.38416536 #> 467 -1.912788e-01  0.899895793     5 1.41487350 #> 468 -2.221227e-01  0.903084439     5 1.44588183 #> 469 -2.533592e-01  0.905212197     5 1.47719070 #> 470 -2.849516e-01  0.906257449     5 1.50880043 #> 471 -3.168625e-01  0.906199842     5 1.54071135 #> 472 -3.490533e-01  0.905020323     5 1.57292376 #> 473 -3.814847e-01  0.902701180     5 1.60543797 #> 474 -4.141165e-01  0.899226079     5 1.63825426 #> 475 -4.469077e-01  0.894580097     5 1.67137293 #> 476 -4.798165e-01  0.888749760     5 1.70479424 #> 477 -5.128006e-01  0.881723071     5 1.73851848 #> 478 -5.458168e-01  0.873489539     5 1.77254590 #> 479 -5.788217e-01  0.864040213     5 1.80687675 #> 480 -6.117708e-01  0.853367701     5 1.84151129 #> 481 -6.446198e-01  0.841466203     5 1.87644976 #> 482 -6.773233e-01  0.828331523     5 1.91169240 #> 483 -7.098361e-01  0.813961101     5 1.94723943 #> 484 -7.421124e-01  0.798354021     5 1.98309107 #> 485 -7.741063e-01  0.781511036     5 2.01924756 #> 486 -8.057715e-01  0.763434575     5 2.05570909 #> 487 -8.370618e-01  0.744128762     5 2.09247588 #> 488 -8.679308e-01  0.723599420     5 2.12954814 #> 489 -8.983323e-01  0.701854082     5 2.16692605 #> 490 -9.282198e-01  0.678901998     5 2.20460981 #> 491 -9.575474e-01  0.654754134     5 2.24259961 #> 492 -9.862690e-01  0.629423178     5 2.28089563 #> 493 -1.014339e+00  0.602923536     5 2.31949806 #> 494 -1.041712e+00  0.575271328     5 2.35840706 #> 495 -1.068342e+00  0.546484386     5 2.39762281 #> 496 -1.094186e+00  0.516582242     5 2.43714547 #> 497 -1.119199e+00  0.485586121     5 2.47697521 #> 498 -1.143337e+00  0.453518928     5 2.51711219 #> 499 -1.166559e+00  0.420405229     5 2.55755656 #> 500 -1.188821e+00  0.386271243     5 2.59830848"},{"path":[]},{"path":"https://teunbrand.github.io/ggarrow/news/index.html","id":"geom-layers-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Geom layers","title":"ggarrow 0.0.0.9000","text":"Several geom functions: geom_arrow() works like geom_path(). geom_arrow_segment() works like geom_segment() geom_arrow_chain() works like type = \"b\" plot base R. geom_arrow_curve() works like geom_curve().","code":""},{"path":"https://teunbrand.github.io/ggarrow/news/index.html","id":"arrow-grob-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Arrow grob","title":"ggarrow 0.0.0.9000","text":"function grob_arrow() creates grid grob largely mimics polylineGrob() grob, following differences. arrow_{head/fins/mid} controls shape ornament. length_{head/fins/mid} controls size ornament. justify controls ornament placed relative line ends. mid_place controls middle (interior) arrows placed. resect{_head/_fins} can shorten endpoints. force_arrow determines arrows drawn lines short accommodate ornaments. shaft_width controls linewidth every point x y line can shortened endpoints using resect{_head/_fins} arguments. line treated polygon, fill controls colour line, whereas colour controls colour outline.","code":""},{"path":"https://teunbrand.github.io/ggarrow/news/index.html","id":"arrow-scales-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Arrow scales","title":"ggarrow 0.0.0.9000","text":"arrow_{head/fins/mid} promoted parameters aesthetics. Correspondingly, now 3 discrete scales 3 aesthetics.","code":""},{"path":"https://teunbrand.github.io/ggarrow/news/index.html","id":"arrow-shapes-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Arrow shapes","title":"ggarrow 0.0.0.9000","text":"Added following shapes ornaments: arrow_head_wings() looks like classic arrow. arrow_head_line() two line protruding tip line. arrow_head_minimal() just stumpy line-end. arrow_fins_feather() two stacked parallelograms. arrow_fins_line() also two lines opposite direction. arrow_fins_minimal() just line-end triangle taken . arrow_cup() forms arc around point.","code":""},{"path":"https://teunbrand.github.io/ggarrow/news/index.html","id":"other-0-0-0-9000","dir":"Changelog","previous_headings":"","what":"Other","title":"ggarrow 0.0.0.9000","text":"annotate_arrow() layer specifically arrow annotations.","code":""}]
